spring.application.name=demo
spring.profiles.active=dev
server.port=3000

# ===============================
# =  DATA SOURCE
# ===============================
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/demo-local
spring.datasource.username=postgres
spring.datasource.password=postgres

# ===============================
# =  MYBATIS
# ===============================
mybatis.mapper-locations=classpath*:/mappers/*/*Mapper.xml
mybatis.config-location=classpath:mybatis-config.xml

# ===============================
# =  JWT (Secrect Key must equals 32 characters)
# Expire Time: 15 minutes
# Expire Refresh: 30 days
# ===============================
jwt.access-token-secret=aXZuHZSrxo0gHRWe01sjNyH86OBg1AbP
jwt.refresh-token-secret=aXZuHZSrxo0gHRWe01sjNyH86OBg2AbP
jwt.expireTime=900000

# ===============================
# =  SWAGGER
# ===============================
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true

springdoc.default-produces-media-type=application/json
springdoc.default-consumes-media-type=application/json
springdoc.auto-tag-classes=true
springdoc.operation-id-generation-enabled=true
springdoc.paths-to-match=/api/**
springdoc.packages-to-scan=com.example.demo

# ===============================
# =  JASPER-REPORT
# ===============================
jasper.reports.path=classpath:reports/
jasper.reports.cache.enabled=true
jasper.reports.cache.max-size=100
logging.level.net.sf.jasperreports=WARN
logging.level.com.example.jasper=DEBUG
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=50MB

# ===============================
# =  KAFKA
# ===============================
kafka.enabled=false
spring.kafka.bootstrap-servers=localhost:9092

spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3

spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=group_id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# ===============================
# =  KEYCLOAK
# ===============================
keycloak.enabled=true
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/demo
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/demo/protocol/openid-connect/certs